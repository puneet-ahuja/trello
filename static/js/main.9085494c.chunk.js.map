{"version":3,"sources":["components/header/index.js","components/boardMenu/index.js","components/card/index.js","components/list/index.js","components/listContainer/index.js","components/board/index.js","components/menu/index.js","components/mainContent/index.js","components/addTaskModal/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","onAddTaskClick","className","src","alt","onClick","BoardMenu","Card","title","id","category","draggable","onDragStart","e","event","dataTransfer","setData","dragStart","List","list","updateTasks","onDrop","parseInt","getData","Drop","onDragOver","preventDefault","map","name","ListContainer","tasks","todoList","filter","type","doingList","doneList","Board","ListCard","content","description","Menu","thumb_image_url","item","MainContent","AddTaskModal","onCrossClick","addTask","useState","taskValue","setTaskValue","value","onChange","target","App","showTaskModal","setShowTaskModal","setTasks","newCat","taskName","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6ZAqBeA,MAlBf,YAAmC,IAAlBC,EAAiB,EAAjBA,eACf,OACE,yBAAKC,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,SAAf,IAAwB,yBAAKC,IAAI,2BAA2BC,IAAI,QAAQF,UAAU,eAAlF,SACA,yBAAKA,UAAU,UAAf,WAEJ,yBAAKA,UAAU,QAAf,UACA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,8BAA8BG,QAASJ,GAAtD,KACA,yBAAKC,UAAU,gCAAf,KACA,yBAAKA,UAAU,wCAAf,KACA,yBAAKA,UAAU,sBAAsBC,IAAI,yBAAyBC,IAAI,Y,kBCQnEE,MApBf,WACE,OACE,yBAAKJ,UAAU,cACX,yBAAKA,UAAU,cACX,oDACA,yBAAKA,UAAU,OAAOC,IAAI,2BAA2BC,IAAI,UAE7D,yBAAKF,UAAU,cAAf,eAEI,0BAAMA,UAAU,SAAhB,OAEJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,OAAOC,IAAI,2BAA2BC,IAAI,SACzD,+CAEJ,yBAAKF,UAAU,cAAa,yBAAKA,UAAU,OAAOC,IAAI,2BAA2BC,IAAI,Y,kBCF9EG,MAbf,YAAoC,IAArBC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,GAAGC,EAAW,EAAXA,SAMtB,OACE,yBAAKD,GAAIA,EAAIP,UAAU,OAAOS,WAAW,EAAMC,YAAa,SAACC,GAAD,OAL5D,SAAmBC,EAAML,GACrBK,EAAMC,aAAaC,QAAQ,KAAKP,GAChCK,EAAMC,aAAaC,QAAQ,WAAWN,GAGuBO,CAAUJ,EAAEJ,KACxED,ICoBMU,MAzBf,YAA0C,IAA3BV,EAA0B,EAA1BA,MAAMW,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,YAazB,OACE,yBAAKlB,UAAU,OAAOmB,OAAQ,SAACR,GAAD,OAb9B,SAAcC,GACV,IAAML,EAAKa,SAASR,EAAMC,aAAaQ,QAAQ,OAC9BT,EAAMC,aAAaQ,QAAQ,cAC5Bf,GACZY,EAAYX,EAAGD,GASYgB,CAAKX,IAAIY,WAAY,SAACZ,GAAaA,EAJ5Da,mBAKN,yBAAKxB,UAAU,eACX,yBAAKA,UAAU,cAAcM,GAC7B,qCAEHW,EAAKQ,KAAK,gBAAEC,EAAF,EAAEA,KAAKnB,EAAP,EAAOA,GAAP,OAAgB,kBAAC,EAAD,CAAMD,MAAOoB,EAAMnB,GAAIA,EAAIC,SAAUF,OAChE,yBAAKN,UAAU,YAAf,mBCTO2B,MAbf,YAA6C,IAArBC,EAAoB,EAApBA,MAAMV,EAAc,EAAdA,YACpBW,EAAUD,EAAME,QAAO,kBAAiB,SAAjB,EAAEC,QACzBC,EAAWJ,EAAME,QAAO,kBAAiB,UAAjB,EAAEC,QAC1BE,EAAUL,EAAME,QAAO,kBAAiB,SAAjB,EAAEC,QACjC,OACE,yBAAK/B,UAAU,kBACX,kBAAC,EAAD,CAAMM,MAAO,OAAQW,KAAMY,EAAUX,YAAaA,IAClD,kBAAC,EAAD,CAAMZ,MAAO,QAASW,KAAMe,EAAWd,YAAaA,IACpD,kBAAC,EAAD,CAAMZ,MAAO,OAAQW,KAAMgB,EAAUf,YAAaA,MCE3CgB,MATf,YAAsC,IAAtBN,EAAqB,EAArBA,MAAOV,EAAc,EAAdA,YACrB,OACE,yBAAKlB,UAAU,mBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAe4B,MAAOA,EAAOV,YAAaA,M,MCNlD,SAASiB,EAAT,GAAoE,IAAhDJ,EAA+C,EAA/CA,KAAK/B,EAA0C,EAA1CA,UAAUM,EAAgC,EAAhCA,MAAML,EAA0B,EAA1BA,IAAgBmC,GAAU,EAAtBC,YAAsB,EAAVD,SACrD,OACI,yBAAKpC,UAAU,uBACH,SAAP+B,EACK,yBAAK/B,UAAU,OAAOC,IAAKA,EAAKC,IAAKI,IAC5B,UAATyB,EACG,yBAAK/B,UAAW,QAAQA,IACxB,yBAAKA,UAAU,QAAQoC,GAChC,yBAAKpC,UAAU,mBAAmBM,IAsD/BgC,MAjDf,WAgCE,OACE,yBAAKtC,UAAU,QACX,yBAAKA,UAAU,eAAf,OAEI,0BAAMA,UAAU,kBAAhB,MAEJ,yBAAKA,UAAU,kBAPL,CAAC,CAAC0B,KAAK,SAASa,gBAAgB,0BAA0B,CAACb,KAAK,SAASa,gBAAgB,0BAA0B,CAACb,KAAK,SAASa,gBAAgB,2BAQjJd,KAAI,gBAAEC,EAAF,EAAEA,KAAKa,EAAP,EAAOA,gBAAP,OAA4B,yBAAKvC,UAAU,aAAaC,IAAKsC,EAAiBrC,IAAKwB,QAElG,yBAAK1B,UAAU,UAAf,aAvCW,CACX,CACI+B,KAAM,QACN/B,UAAW,UACXM,MAAO,qBAEX,CACIyB,KAAM,OACN9B,IAAK,2BACLK,MAAO,gBAEX,CACIyB,KAAM,OACN9B,IAAK,2BACLK,MAAO,YAEX,CACIyB,KAAM,OACN9B,IAAK,2BACLK,MAAO,YACP+B,YAAa,sCACf,CACEN,KAAM,UACNK,QAAS,MACT9B,MAAO,SAkBHmB,KAAI,SAAAe,GAAI,OAAI,kBAACL,EAAaK,QC9C3BC,MATf,YAA4C,IAAtBb,EAAqB,EAArBA,MAAOV,EAAc,EAAdA,YAC3B,OACE,yBAAKlB,UAAU,gBACX,kBAAC,EAAD,CAAO4B,MAAOA,EAAOV,YAAaA,IAClC,kBAAC,EAAD,Q,YCcOwB,MApBf,YAA+C,IAAxBC,EAAuB,EAAvBA,aAAaC,EAAU,EAAVA,QAAU,EACVC,mBAAS,IADC,mBACrCC,EADqC,KAC1BC,EAD0B,KAO5C,OACE,6BACI,yBAAK/C,UAAU,YACf,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBAAf,WAAsC,0BAAMA,UAAU,cAAcG,QAASwC,GAAvC,MACtC,4CACA,2BAAOZ,KAAK,OAAOiB,MAAOF,EAAWG,SAAU,SAACrC,GAAD,OAASmC,EAAanC,EAAMsC,OAAOF,UAClF,yBAAKhD,UAAU,eAAeG,QAAS,kBAXjD,SAAwB2C,GACtBF,EAAQE,GACRH,IASmD5C,CAAe+C,KAA1D,e,8NCXZ,IAAIvC,EAAI,EAwBO4C,MAvBf,WAAgB,IAAD,EAE4BN,oBAAS,GAFrC,mBAENO,EAFM,KAEQC,EAFR,OAIUR,mBAAS,IAJnB,mBAINjB,EAJM,KAIA0B,EAJA,KAcb,OACE,yBAAKtD,UAAU,OACb,kBAAC,EAAD,CAAQD,eAAgB,kBAAIsD,GAAiB,MAC7C,kBAAC,EAAD,CAAazB,MAAOA,EAAOV,YAV/B,SAAqBX,EAAGgD,GACtBD,EAAS1B,EAAMH,KAAI,SAAAe,GAAI,OAAEA,EAAKjC,KAAOA,E,yVAAZ,IAAsBiC,EAAtB,CAA2BT,KAAKwB,IAASf,SAU/DY,GAAiB,kBAAC,EAAD,CAAcT,aAAc,kBAAIU,GAAiB,IAAQT,QAP/E,SAAiBY,EAASzB,GACxBuB,EAAS,GAAD,mBAAK1B,GAAL,CAAW,CAACF,KAAK8B,EAASzB,KAAMA,GAAQ,OAAQxB,GAAIA,aCP5CkD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9085494c.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css'\n\nfunction Header({onAddTaskClick}) {\n  return (\n    <div className=\"header\">\n        <div className='left-menu'>\n            <div className='board'> <img src='./assets/icons/Board.png' alt='board' className='board-logo'/>Board</div>\n            <div className='search'>Search</div> \n        </div>\n        <div className='logo'>Trello</div>\n        <div className='right-menu'>\n            <div className='add right-menu-btn light-bg' onClick={onAddTaskClick}>+</div>\n            <div className='info right-menu-btn light-bg'>i</div>\n            <div className='notification right-menu-btn light-bg'>N</div>\n            <img className='user right-menu-btn' src='./assets/user/user.jpg' alt='user'/>\n        </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './style.css'\n\nfunction BoardMenu() {\n  return (\n    <div className=\"board-menu\">\n        <div className='board-item'>\n            <span>Things to get Done</span>\n            <img className='icon' src='./assets/icons/Board.png' alt='Star'/>\n        </div>\n        <div className='board-item'>\n            Team Awesome\n            <span className='label'>BC</span>\n        </div>\n        <div className='board-item'>\n            <img className='icon' src='./assets/icons/Board.png' alt='Team'/>\n            <span>Team Visible</span>\n        </div>\n        <div className='board-item'><img className='icon' src='./assets/icons/Board.png' alt='Team'/></div>\n    </div>\n  );\n}\n\nexport default BoardMenu;\n","import React from 'react';\nimport './style.css'\n\nfunction Card({title,id,category}) {\n\n    function dragStart(event,id){\n        event.dataTransfer.setData(\"id\",id)\n        event.dataTransfer.setData(\"category\",category)\n    }\n  return (\n    <div id={id} className=\"card\" draggable={true} onDragStart={(e)=>dragStart(e,id)}>\n        {title}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport './style.css'\nimport Card from '../card';\n\n\n\nfunction List({title,list, updateTasks}) {\n    function Drop(event){\n        const id = parseInt(event.dataTransfer.getData(\"id\"))\n        const category = event.dataTransfer.getData(\"category\")\n        if(category !== title){\n            updateTasks(id,title)\n        }\n    }\n\n    function DragOver(event){\n        event.preventDefault()\n    }\n\n  return (\n    <div className=\"list\" onDrop={(e)=>Drop(e)} onDragOver={(e)=>DragOver(e)}>\n        <div className='list-header'>\n            <div className='list-title'>{title}</div>\n            <div>...</div>\n        </div>\n        {list.map( ({name,id}) => (<Card title={name} id={id} category={title}></Card>))}\n        <div className='add-card'>Add a card...</div>\n    </div>\n  );\n}\n\nexport default List;","import React from 'react';\nimport './style.css'\nimport List from '../list'\n\nfunction ListContainer({tasks,updateTasks}) {\n    const todoList= tasks.filter(({type})=>type==='Todo')\n    const doingList= tasks.filter(({type})=>type==='Doing')\n    const doneList= tasks.filter(({type})=>type==='Done')\n  return (\n    <div className=\"list-container\">\n        <List title={\"Todo\"} list={todoList} updateTasks={updateTasks}/>\n        <List title={\"Doing\"} list={doingList} updateTasks={updateTasks}/>\n        <List title={\"Done\"} list={doneList} updateTasks={updateTasks}/>\n    </div>\n  );\n}\n\nexport default ListContainer;\n","import React from 'react';\nimport './style.css'\nimport BoardMenu from '../boardMenu';\nimport ListContainer from '../listContainer';\n\nfunction Board({tasks, updateTasks}) {\n  return (\n    <div className=\"board-container\">\n        <BoardMenu/>\n        <ListContainer tasks={tasks} updateTasks={updateTasks}/>\n    </div>\n  );\n}\n\nexport default Board;\n","import React from 'react';\nimport './style.css'\n\nfunction ListCard ({type,className,title,src,description,content}) {\n    return (\n        <div className='list-card-container'>\n            {type==='icon'\n                ? <img className='icon' src={src} alt={title}/>\n                : type === 'style'\n                    ?<div className={'icon '+className}></div>\n                    :<div className='icon'>{content}</div>}\n            <div className='list-card-title'>{title}</div>\n        </div>\n    )\n}\n\nfunction Menu() {\n\n    const config = [\n        {\n            type: \"style\",\n            className: 'bg-blue',\n            title: 'Change Background'\n        },\n        {\n            type: \"icon\",\n            src: './assets/icons/Board.png',\n            title: 'FIlter Cards'\n        },\n        {\n            type: \"icon\",\n            src: './assets/icons/Board.png',\n            title: 'Stickers'\n        },\n        {\n            type: \"icon\",\n            src: './assets/icons/Board.png',\n            title: 'Power-ups',\n            description: 'Calendar, Google Drive and more...'\n        },{\n            type: \"content\",\n            content: '...',\n            title: 'More'\n        }\n\n    ]\n\n    const users = [{name:'Puneet',thumb_image_url:'./assets/user/user.jpg'},{name:'Puneet',thumb_image_url:'./assets/user/user.jpg'},{name:'Puneet',thumb_image_url:'./assets/user/user.jpg'}]\n  return (\n    <div className=\"menu\">\n        <div className='menu-header'>\n            Menu\n            <span className='menu-cross-btn'>X</span>\n        </div>\n        <div className='user-container'>\n            {users.map(({name,thumb_image_url}) => <img className='user-image' src={thumb_image_url} alt={name}/>)}\n        </div>\n        <div className='invite'>\n            Invite...\n        </div>\n        {config.map(item => <ListCard {...item}/>)}\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport './style.css'\nimport Board from '../board';\nimport Menu from '../menu';\n\nfunction MainContent({tasks, updateTasks}) {\n  return (\n    <div className=\"main-content\">\n        <Board tasks={tasks} updateTasks={updateTasks}></Board>\n        <Menu></Menu>\n    </div>\n  );\n}\n\nexport default MainContent;\n","import React, {useState} from 'react';\nimport './style.css'\n\nfunction AddTaskModal({onCrossClick,addTask}) {\n  const [taskValue, setTaskValue] = useState('')\n\n  function onAddTaskClick(taskValue){\n    addTask(taskValue)\n    onCrossClick()\n  }\n  return (\n    <div>\n        <div className='overlay'/>\n        <div className='add-task-form'>\n            <div className='modal-header'>Add Task<span className='close-modal' onClick={onCrossClick}>X</span></div>\n            <label>Task Name</label>\n            <input type='text' value={taskValue} onChange={(event)=>setTaskValue(event.target.value)}/>\n            <div className='add-task-btn' onClick={()=>onAddTaskClick(taskValue)}>Add Task</div>\n        </div>\n    </div>\n  );\n}\n\nexport default AddTaskModal;\n","import React, {useState} from 'react';\nimport Header from './components/header';\nimport MainContent from './components/mainContent';\nimport './App.css';\nimport AddTaskModal from './components/addTaskModal';\n\nlet id= 1;\nfunction App() {\n\n  const [showTaskModal,setShowTaskModal] = useState(false)\n\n  const [tasks,setTasks]=useState([\n  ])\n\n  function updateTasks(id,newCat) {\n    setTasks(tasks.map(item=>item.id === id ? { ...item,type:newCat}: item))\n  }\n\n  function addTask(taskName,type) {\n    setTasks([...tasks,{name:taskName,type: type || 'Todo', id: id++}])\n  }\n  return (\n    <div className=\"App\">\n      <Header onAddTaskClick={()=>setShowTaskModal(true)}/>\n      <MainContent tasks={tasks} updateTasks={updateTasks}></MainContent>\n      {showTaskModal && <AddTaskModal onCrossClick={()=>setShowTaskModal(false)} addTask={addTask}/>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}